name: Build latest tag

on:
  # Allow manual runs.
  workflow_dispatch:
  # Also run on updates to this repo.
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  
env:
  PLATFORMS: linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64

jobs:

  build-image:
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get latest Woodpecker tag
        run: |
          cd woodpecker
          git fetch --tags
          LATEST_TAG_REV=$(git rev-list --tags --max-count 1)
          WOODPECKER_VERSION=$(git describe --tags ${LATEST_TAG_REV})
          echo "WOODPECKER_VERSION=${WOODPECKER_VERSION}" >> $GITHUB_ENV
          git checkout ${WOODPECKER_VERSION}

      - name: Check whether latest tag needs building
        run: |
          echo "Checking whether tag florianpiesche/woodpecker-server:${WOODPECKER_VERSION} Docker image exists."
          TAGS=$(curl -s https://registry.hub.docker.com/v1/repositories/florianpiesche/woodpecker-server/tags | jq -r ".[].name")
          echo "Got tags: ${TAGS}"

          if [[ "${TAGS}" == *"${WOODPECKER_VERSION}"* ]]; then
            echo "WOODPECKER_TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "WOODPECKER_TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Run this only if tag needs building
        if: env.WOODPECKER_TAG_EXISTS == 'false'
        run: echo "Tag ${WOODPECKER_VERSION} needs building."

      # - name: Docker Setup QEMU
      #   if: env.WOODPECKER_TAG_EXISTS == 'false'
      #   uses: docker/setup-qemu-action@v1.0.1

      # - name: Docker Setup Buildx
      #   if: ${{ steps.check_tag_exists.outcome == success() }}
      #   uses: docker/setup-buildx-action@v1.0.3
      #   with:
      #     driver-opts: network=host

      # - name: Build Woodpecker
      #   if: ${{ steps.check_tag_exists.outcome == success() }}
      #   uses: docker/build-push-action@v2.1.0
      #   with:
      #     file: Dockerfile.build
      #     tags: localhost:5000/woodpecker/build
      #     platforms: ${{ env.PLATFORMS }}
      #     push: true
      #     build-args: VERSION=${{ env.WOODPECKER_VERSION }}

      # - name: Build and push Woodpecker Server image
      #   if: ${{ steps.check_tag_exists.outcome == success() }}
      #   uses: docker/build-push-action@v2.1.0
      #   with:
      #     file: Dockerfile.server
      #     tags: |
      #       florianpiesche/woodpecker-server
      #       florianpiesche/woodpecker-server:${{ env.WOODPECKER_VERSION }}
      #     platforms: ${{ env.PLATFORMS }}
      #     push: true

      # - name: Build and push Woodpecker Agent image
      #   if: ${{ steps.check_tag_exists.outcome == success() }}
      #   uses: docker/build-push-action@v2.1.0
      #   with:
      #     file: Dockerfile.agent
      #     tags: |
      #       florianpiesche/woodpecker-agent
      #       florianpiesche/woodpecker-agent:${{ env.WOODPECKER_VERSION }}
      #     platforms: ${{ env.PLATFORMS }}
      #     push: true
